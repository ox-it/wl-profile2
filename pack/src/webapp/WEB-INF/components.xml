<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!--  SakaiProxy -->
 	<bean id="org.sakaiproject.profile2.logic.SakaiProxy"
    	class="org.sakaiproject.profile2.logic.SakaiProxyImpl"
        init-method="init">
        <!-- API injection -->
        <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
        <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
        <property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager" />
        <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService" />
        <property name="sakaiPersonManager" ref="org.sakaiproject.api.common.edu.person.SakaiPersonManager" />
		<property name="contentHostingService" ref="org.sakaiproject.content.api.ContentHostingService" />
		<property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
		<property name="emailService" ref="org.sakaiproject.email.api.EmailService" />
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
		<property name="emailTemplateService" ref="org.sakaiproject.emailtemplateservice.service.EmailTemplateService" />
		
		<!-- inject other resources -->
		<property name="emailTemplates" ref="org.sakaiproject.profile2.emailtemplates.List" />
		
	</bean>
	
	<!-- setup a DAO, accessed via the transaction proxy -->
	<bean id="org.sakaiproject.profile2.dao.ProfileDaoTarget"
    	class="org.sakaiproject.profile2.dao.impl.ProfileDaoImpl"
    	init-method="init">
		<property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
	</bean>
        
	<!--  register the DAO as a transactional interceptor. Use the classloader proxy from gendao because this is a protected DAO -->
	<bean id="org.sakaiproject.profile2.dao.ProfileDao"
		class="org.sakaiproject.genericdao.springutil.CurrentClassLoaderTxProxyFactoryBean">		
		<property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		<property name="target" ref="org.sakaiproject.profile2.dao.ProfileDaoTarget" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>	
	
	<!-- ProfileLogic -->
	<bean id="org.sakaiproject.profile2.logic.ProfileLogic"
    	class="org.sakaiproject.profile2.logic.ProfileLogicImpl"
    	init-method="init">
    	<property name="dao" ref="org.sakaiproject.profile2.dao.ProfileDao" />
		<property name="sakaiProxy" ref="org.sakaiproject.profile2.logic.SakaiProxy" />
	</bean>
	
	<!--  API Service beans -->
	<bean id="org.sakaiproject.profile2.service.BaseProfileService" abstract="true">
		<property name="sakaiProxy" ref="org.sakaiproject.profile2.logic.SakaiProxy" />
		<property name="profileLogic" ref="org.sakaiproject.profile2.logic.ProfileLogic" />
	</bean>
	
	<bean id="org.sakaiproject.profile2.service.ProfileService" 
		class="org.sakaiproject.profile2.service.ProfileServiceImpl"
		parent="org.sakaiproject.profile2.service.BaseProfileService" />
	
	<bean id="org.sakaiproject.profile2.service.ProfilePrivacyService" 
		class="org.sakaiproject.profile2.service.ProfilePrivacyServiceImpl"
		parent="org.sakaiproject.profile2.service.BaseProfileService" />
	
	<bean id="org.sakaiproject.profile2.service.ProfilePreferencesService" 
		class="org.sakaiproject.profile2.service.ProfilePreferencesServiceImpl"
		parent="org.sakaiproject.profile2.service.BaseProfileService" />
	
	<bean id="org.sakaiproject.profile2.service.ProfileStatusService" 
		class="org.sakaiproject.profile2.service.ProfileStatusServiceImpl"
		parent="org.sakaiproject.profile2.service.BaseProfileService" />
		
	<bean id="org.sakaiproject.profile2.service.ProfileImageService" 
		class="org.sakaiproject.profile2.service.ProfileImageServiceImpl"
		parent="org.sakaiproject.profile2.service.BaseProfileService" />
		
	<bean id="org.sakaiproject.profile2.service.ProfileLinkService" 
		class="org.sakaiproject.profile2.service.ProfileLinkServiceImpl"
		parent="org.sakaiproject.profile2.service.BaseProfileService" />
    
    <!-- EntityBroker beans -->
	<bean id="org.sakaiproject.profile2.entity.ProfileEntityProvider" class="org.sakaiproject.profile2.entity.ProfileEntityProviderImpl">
		<property name="profileService" ref="org.sakaiproject.profile2.service.ProfileService" />
		<property name="profileImageService" ref="org.sakaiproject.profile2.service.ProfileImageService" />
	</bean>
	
	<bean id="org.sakaiproject.profile2.entity.ProfilePrivacyEntityProvider" class="org.sakaiproject.profile2.entity.ProfilePrivacyEntityProviderImpl">
		<property name="privacyService" ref="org.sakaiproject.profile2.service.ProfilePrivacyService" />
	</bean>
	
	<bean id="org.sakaiproject.profile2.entity.ProfilePreferencesEntityProvider" class="org.sakaiproject.profile2.entity.ProfilePreferencesEntityProviderImpl">
		<property name="preferencesService" ref="org.sakaiproject.profile2.service.ProfilePreferencesService" />
	</bean>
	
	<bean id="org.sakaiproject.profile2.entity.ProfileStatusEntityProvider" class="org.sakaiproject.profile2.entity.ProfileStatusEntityProviderImpl">
		<property name="statusService" ref="org.sakaiproject.profile2.service.ProfileStatusService" />
	</bean>
	<bean id="org.sakaiproject.profile2.entity.ProfileLinkEntityProvider" class="org.sakaiproject.profile2.entity.ProfileLinkEntityProviderImpl">
		<property name="linkService" ref="org.sakaiproject.profile2.service.ProfileLinkService" />
	</bean>
	

	<!-- Add our HBM files to the Sakai global session factory -->
	<bean id="org.sakaiproject.profile2.hbm.HBMMappingList"
    	class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">

	    <property name="mappingResources">
	      <list>
	      	<value>org/sakaiproject/profile2/hbm/ProfileStatus.hbm.xml</value>
	        <value>org/sakaiproject/profile2/hbm/ProfilePrivacy.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/ProfileFriend.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/ProfileImage.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/SakaiPersonMeta.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/ProfilePreferences.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/ProfileImageExternal.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/Message.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/MessageThread.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/MessageParticipant.hbm.xml</value>
	        <value>org/sakaiproject/profile2/hbm/GalleryImage.hbm.xml</value>
	        <value>org/sakaiproject/profile2/hbm/CompanyProfile.hbm.xml</value>
	        <value>org/sakaiproject/profile2/hbm/SocialNetworkingInfo.hbm.xml</value>
	        <value>org/sakaiproject/profile2/hbm/ProfileImageOfficial.hbm.xml</value>
	        <value>org/sakaiproject/profile2/hbm/ProfileKudos.hbm.xml</value>
	      </list>
	    </property>

  	</bean>
  	
	
	<!-- Legacy bean that implements the original ProfileManager interface -->
	<bean id="org.sakaiproject.profile2.legacy.ProfileManager" class="org.sakaiproject.profile2.legacy.ProfileManagerImpl" init-method="init" destroy-method="destroy">
       
        <property name="profileService">
        	<ref bean="org.sakaiproject.profile2.service.ProfileService"/>
        </property>
        <property name="profileImageService">
        	<ref bean="org.sakaiproject.profile2.service.ProfileImageService"/>
        </property>
        <property name="sakaiProxy">
        	<ref bean="org.sakaiproject.profile2.logic.SakaiProxy"/>
        </property>
	</bean>
	
	<!-- Setup email templates -->
	<bean id="org.sakaiproject.profile2.emailtemplates.List" class="java.util.ArrayList">
		<constructor-arg>
      		<list>
        		<value>org/sakaiproject/profile2/emailtemplates/template-messageNew.xml</value>
        		<value>org/sakaiproject/profile2/emailtemplates/template-messageReply.xml</value>
        		<value>org/sakaiproject/profile2/emailtemplates/template-connectionRequest.xml</value>
        		<value>org/sakaiproject/profile2/emailtemplates/template-connectionConfirm.xml</value>
      		</list>      
    	</constructor-arg>
  	</bean>
  	
  	<!-- jobs -->
	<bean id="org.sakaiproject.profile2.job.KudosJob"
		class="org.sakaiproject.profile2.job.KudosJob"
		init-method="init">
		<property name="profileLogic" ref="org.sakaiproject.profile2.logic.ProfileLogic" />
		<property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
	</bean>
	
	<bean id="org.sakaiproject.profile2.job.KudosJobBeanWrapper"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="jobName" value="Profile2 Kudos Calculator" />
		<property name="beanId" value="org.sakaiproject.profile2.job.KudosJob" />
		<property name="schedulerManager" ref="org.sakaiproject.api.app.scheduler.SchedulerManager" />
	</bean>

</beans>
