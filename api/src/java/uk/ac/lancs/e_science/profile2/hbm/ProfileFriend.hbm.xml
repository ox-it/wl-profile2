<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping
    PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="uk.ac.lancs.e_science.profile2.hbm">

	<class name="ProfileFriend" table="PROFILE_FRIENDS_T">

	    <id name="id">
	      <column name="ID" not-null="true" length="19" />
	      <generator class="native">
	        <param name="sequence">PROFILE_FRIENDS_S</param>
	      </generator>
	    </id>

	    <property name="userUuid" column="USER_UUID" length="36" not-null="true" />
	    <property name="friendUuid" column="FRIEND_UUID" length="36" not-null="true" />
		<property name="relationship" column="RELATIONSHIP" length="1" not-null="true" />
		<property name="requestedDate" column="REQUESTED_DATE" not-null="true" />
		<property name="confirmed" column="CONFIRMED" not-null="true"/>
	    <property name="confirmedDate" column="CONFIRMED_DATE" not-null="false" />

  	</class>
  	
  	

	<sql-query name="getFriendsForUser">
		<return-scalar column="userUuid" type="string" />
		<return-scalar column="confirmed" type="boolean" />
		<return-scalar column="statusMessage" type="string" />
		<return-scalar column="statusDate" type="date" />
    	<![CDATA[
	  	select PROFILE_FRIENDS_T.FRIEND_UUID as userUuid, PROFILE_FRIENDS_T.CONFIRMED as confirmed, PROFILE_STATUS_T.MESSAGE as statusMessage, PROFILE_STATUS_T.DATE_ADDED as statusDate from PROFILE_FRIENDS_T left join PROFILE_STATUS_T on PROFILE_FRIENDS_T.FRIEND_UUID=PROFILE_STATUS_T.USER_UUID where PROFILE_FRIENDS_T.USER_UUID = :userUuid
		union
		select PROFILE_FRIENDS_T.USER_UUID as userUuid, PROFILE_FRIENDS_T.CONFIRMED as confirmed, PROFILE_STATUS_T.MESSAGE as statusMessage, PROFILE_STATUS_T.DATE_ADDED as statusDate from PROFILE_FRIENDS_T left join PROFILE_STATUS_T on PROFILE_FRIENDS_T.USER_UUID=PROFILE_STATUS_T.USER_UUID where PROFILE_FRIENDS_T.FRIEND_UUID = :userUuid and PROFILE_FRIENDS_T.CONFIRMED=true
		]]>
	</sql-query>
	
	<sql-query name="getFriendRequestsForUser">
		<return-scalar column="userUuid" type="string" />
		<return-scalar column="requestedDate" type="date" />
    	<![CDATA[
		select PROFILE_FRIENDS_T.USER_UUID as userUuid, PROFILE_FRIENDS_T.REQUESTED_DATE as requestedDate from PROFILE_FRIENDS_T where PROFILE_FRIENDS_T.FRIEND_UUID = :userUuid and PROFILE_FRIENDS_T.CONFIRMED=false
		]]>
	</sql-query>
	
	<sql-query name="getConfirmedFriendUserIdsForUser">
		<return-scalar column="userUuid" type="string" />
    	<![CDATA[
		select PROFILE_FRIENDS_T.FRIEND_UUID as userUuid from PROFILE_FRIENDS_T where PROFILE_FRIENDS_T.USER_UUID = :userUuid and PROFILE_FRIENDS_T.CONFIRMED=true
		union
		select PROFILE_FRIENDS_T.USER_UUID as userUuid from PROFILE_FRIENDS_T where PROFILE_FRIENDS_T.FRIEND_UUID = :userUuid and PROFILE_FRIENDS_T.CONFIRMED=true
		]]>
	</sql-query>

	<!-- 
	<sql-query name="getFriendsForUser">
    	<![CDATA[
    	select PROFILE_FRIENDS_T.FRIEND_UUID, PROFILE_FRIENDS_T.CONFIRMED, PROFILE_STATUS_T.MESSAGE, PROFILE_STATUS_T.DATE_ADDED, SAKAI_PERSON_T.JPEG_PHOTO from PROFILE_FRIENDS_T left join PROFILE_STATUS_T on PROFILE_FRIENDS_T.FRIEND_UUID=PROFILE_STATUS_T.USER_UUID left join SAKAI_PERSON_T on PROFILE_FRIENDS_T.FRIEND_UUID=SAKAI_PERSON_T.AGENT_UUID where PROFILE_FRIENDS_T.USER_UUID = :userUuid 
		union
		select PROFILE_FRIENDS_T.USER_UUID, PROFILE_FRIENDS_T.CONFIRMED, PROFILE_STATUS_T.MESSAGE, PROFILE_STATUS_T.DATE_ADDED, SAKAI_PERSON_T.JPEG_PHOTO from PROFILE_FRIENDS_T left join PROFILE_STATUS_T on PROFILE_FRIENDS_T.USER_UUID=PROFILE_STATUS_T.USER_UUID left join SAKAI_PERSON_T on PROFILE_FRIENDS_T.FRIEND_UUID=SAKAI_PERSON_T.AGENT_UUID where PROFILE_FRIENDS_T.FRIEND_UUID = :friendUuid 
		]]>
	</sql-query>
	-->
	
	<query name="getFriendRecord">
    	<![CDATA[from ProfileFriend friend WHERE ((friend.userUuid = :userUuid AND friend.friendUuid = :friendUuid) OR (friend.userUuid = :friendUuid AND friend.friendUuid = :userUuid))]]>
	</query>
	
	<query name="getFriendRequest">
    	<![CDATA[from ProfileFriend friend WHERE friend.userUuid = :userUuid AND friend.friendUuid = :friendUuid AND friend.confirmed = :confirmed]]>
	</query>

</hibernate-mapping>
